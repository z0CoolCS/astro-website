---

import BaseLayout from "./BaseLayout.astro";

const { frontmatter } = Astro.props;

const dateOptions: object = {year: "numeric", month: "long", day: "numeric", timeZone: 'UTC'};

const formattedPublishDate = new Date(frontmatter.pubDate).toLocaleDateString("en-US", dateOptions);


---

<style>
    a {
      color: #00539F;
    }
  
    .tags {
      display: flex;
      flex-wrap: wrap;
      margin: 0 auto;
    }

    .tag {
      margin: 0.25em;
      border: dotted 1px #a1a1a1;
      border-radius: .5em;
      padding: .5em 1em;
      font-size: 1.15em;
      background-color: #F8FCFD;
    }


</style>

<BaseLayout pageTitle = {'Post - '+frontmatter.title}>


<!-- <h1>{frontmatter.title}</h1> -->
<p>Written by {frontmatter.author}</p>
<p>Date by {formattedPublishDate}</p>
<p><em>{frontmatter.description}</em></p>
<div class="flex justify-center items-center py-10">
    <img class="w-xl" src={frontmatter.image.url} alt={frontmatter.image.alt} />
</div>


<div class="tags pb-5">
    {frontmatter.tags.map((tag) => (
      <p class="tag"><a href={`/tags/${tag}`}>{tag}</a></p>
    ))}
</div>

<slot />

  
</BaseLayout>


<script>
    let copyButtonLabel = "Copy Code";
    let codeBlocks = Array.from(document.querySelectorAll("pre"));
    console.log("Hello World!")
    console.log(codeBlocks[0])
  
    for (let codeBlock of codeBlocks) {
      let wrapper = document.createElement("div");
      wrapper.style.position = "relative";
  
      let copyButton = document.createElement("button");
      copyButton.className = "copy-code";
      copyButton.innerHTML = copyButtonLabel;
  
      codeBlock.setAttribute("tabindex", "0");
      codeBlock.appendChild(copyButton);
      // wrap codebock with relative parent element
      codeBlock.parentNode.insertBefore(wrapper, codeBlock);
      wrapper.appendChild(codeBlock);
  
      copyButton.addEventListener("click", async () => {
        await copyCode(codeBlock, copyButton);
      });
    }
  
    async function copyCode(block, button) {
      let code = block.querySelector("code");
      let text = code.innerText;
  
      await navigator.clipboard.writeText(text);
  
      // visual feedback that task is completed
      button.innerText = "Code Copied";
  
      setTimeout(() => {
        button.innerText = copyButtonLabel;
      }, 700);
    }
  </script>